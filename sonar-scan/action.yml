name: 'sonar-scan'
description: 'Scan code with SonarSource'
inputs:
  configuration:
    description: "Path to the configuration file."
    required: true
  coverage-command:
    description: 'The command to use to run the tests (defaults to go test -v -race -covermode=atomic -coverpkg=./...)'
    required: false
    type: string
    default: go test -v -race -covermode=atomic -coverpkg=./...
  coverage-output-file:
    description: 'The output file name to store the coverage results in (defaults to coverage.out)'
    required: false
    type: string
    default: coverage.out
  coverage-scope:
   description: 'The location to run the command on (defaults to ./...)'
   required: false
   type: string
   default: ./...
  go-mod:
    description: 'Go mod file'
    required: false
  version:
    description: 'Go versions to use'
    required: false

runs:
  using: "composite"
  steps:
    - name: Harden Runner
      uses: step-security/harden-runner@a22641e386edd6104ead99416bac876f4d9b806d
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          ea6ne4j2sb.execute-api.eu-central-1.amazonaws.com:443
          github.com:443
          golang.org:443
          objects.githubusercontent.com:443
          proxy.golang.org:443
          scanner.sonarcloud.io:443
          sonarcloud.io:443
          storage.googleapis.com:443
          sum.golang.org:443

    - name: Checkout repo
      uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@5a083d0e9a84784eb32078397cf5459adecb4c40
      with:
        cache: false
        go-version-file: ${{ inputs.go-mod }}
        go-version: ${{ inputs.go-version }}

    - name: Code Coverage
      shell: bash
      run: ${{ inputs.coverage-command }} -coverprofile=${{ inputs.coverage-output-file }} ${{ inputs.coverage-scope }}

    - uses: SonarSource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d
      with:
        args: >
          -Dproject.settings=${{ inputs.configuration }}
